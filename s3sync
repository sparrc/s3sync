#!/bin/bash

SYNC_DIR=$(jq -r .syncdir < "$HOME/.s3sync/config.json")
BUCKET=$(jq -r .bucket < "$HOME/.s3sync/config.json")

if [ ! -f "$HOME/.s3sync/ts" ]; then
    echo 0 > "$HOME/.s3sync/ts"
fi

if ! aws s3 ls "s3://$BUCKET/ts"; then
    aws s3 cp "$HOME/.s3sync/ts" "s3://$BUCKET/ts"
fi

acquireLock() {
    while true
    do
        aws s3api wait object-not-exists --bucket "$BUCKET" --key lock &>/dev/null
        if [ $? -eq 255 ]; then
            echo "$(date -u +%FT%TZ) Someone else has the lock, waiting..."
        else
            aws s3 cp "$HOME/.s3sync/lock" "s3://$BUCKET/lock" --quiet
            echo "$(date -u +%FT%TZ) Acquired lock"
            return 0
        fi
    done
}

releaseLock() {
    aws s3 rm "s3://$BUCKET/lock" --quiet
    echo "$(date -u +%FT%TZ) Released lock"
}

while true
do
    acquireLock
    NOW=$(date -u "+%s")
    # get latest timestamp from remote:
    TS_REMOTE=$(aws s3 cp "s3://$BUCKET/ts" - --quiet)
    TS_LOCAL=$(cat "$HOME/.s3sync/ts")
    if [ "$TS_REMOTE" -gt "$TS_LOCAL" ]; then
        echo "$(date -u +%FT%TZ) Syncing local directory from remote to local"
        printf "$TS_REMOTE" > "$HOME/.s3sync/ts"
        aws s3 sync "s3://$BUCKET/sync" "$SYNC_DIR" --delete --no-progress
    else
        diff=$(aws s3 sync "$SYNC_DIR" "s3://$BUCKET/sync" --delete --storage-class ONEZONE_IA --no-progress)
        if [[ "$diff" != "" ]]; then
            echo "$diff"
            # we made a change, update timestamps
            echo "$(date -u +%FT%TZ) Local directory synced to remote"
            printf "$NOW" > "$HOME/.s3sync/ts"
            aws s3 cp "$HOME/.s3sync/ts" "s3://$BUCKET/ts" --no-progress
        fi
    fi
    releaseLock
    sleep 120
done

